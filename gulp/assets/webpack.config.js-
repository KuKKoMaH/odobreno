const webpack = require('webpack');

function createConfig(env) {
  var isProduction, webpackConfig;

  if (env === undefined) {
    env = process.env.NODE_ENV;
  }

  isProduction = env === 'production';

  webpackConfig = {
    context: path.join(__dirname, config.src.js),
    entry:   {
      app: './app.js'
    },
    output:  {
      path:       path.join(__dirname, config.dest.js),
      filename:   '[name].js',
      publicPath: 'js/'
    },
    devtool: isProduction ? '#source-map' : '#cheap-module-eval-source-map',
    module:  {
      rules: [{
        test:    /\.js$/,
        exclude: /node_modules/,
        loader:  'babel-loader',
        options: {
          presets: ['es2015', 'stage-2']
        }
      }]
    },
    plugins: [
      // new webpack.optimize.CommonsChunkPlugin({
      //     name: 'vendor',
      //     filename: '[name].js',
      //     minChunks: Infinity
      // }),
      // uncomment in case of emergency code formatter need
      // new PrettierPlugin({
      //     printWidth: 80,
      //     tabWidth: 4
      // }),
      new webpack.ProvidePlugin({
        $:               'jquery',
        jQuery:          'jquery',
        'window.jQuery': 'jquery'
      }),
      new webpack.NoEmitOnErrorsPlugin(),

      new BundleAnalyzerPlugin({
        analyzerMode: 'static',
        analyzerPort: 4000,
        openAnalyzer: false
      })
    ],
  };

  if (isProduction) {
    webpackConfig.plugins.push(
      new webpack.LoaderOptionsPlugin({
        minimize: true
      }),
      new webpack.optimize.UglifyJsPlugin({
        compress: {
          warnings: false
        }
      })
    );
  }

  return webpackConfig;
}

module.exports = createConfig();
module.exports.createConfig = createConfig;